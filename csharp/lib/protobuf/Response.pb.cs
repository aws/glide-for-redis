// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PATH/response.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Response {

  /// <summary>Holder for reflection information generated from PATH/response.proto</summary>
  internal static partial class ResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for PATH/response.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQQVRIL3Jlc3BvbnNlLnByb3RvEghyZXNwb25zZSKsAQoIUmVzcG9uc2US",
            "FAoMY2FsbGJhY2tfaWR4GAEgASgNEhYKDHJlc3BfcG9pbnRlchgCIAEoBEgA",
            "EjcKEWNvbnN0YW50X3Jlc3BvbnNlGAMgASgOMhoucmVzcG9uc2UuQ29uc3Rh",
            "bnRSZXNwb25zZUgAEhcKDXJlcXVlc3RfZXJyb3IYBCABKAlIABIXCg1jbG9z",
            "aW5nX2Vycm9yGAUgASgJSABCBwoFdmFsdWUqGgoQQ29uc3RhbnRSZXNwb25z",
            "ZRIGCgJPSxAAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Response.ConstantResponse), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Response.Response), global::Response.Response.Parser, new[]{ "CallbackIdx", "RespPointer", "ConstantResponse", "RequestError", "ClosingError" }, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum ConstantResponse {
    [pbr::OriginalName("OK")] Ok = 0,
  }

  #endregion

  #region Messages
  internal sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Response.ResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      callbackIdx_ = other.callbackIdx_;
      switch (other.ValueCase) {
        case ValueOneofCase.RespPointer:
          RespPointer = other.RespPointer;
          break;
        case ValueOneofCase.ConstantResponse:
          ConstantResponse = other.ConstantResponse;
          break;
        case ValueOneofCase.RequestError:
          RequestError = other.RequestError;
          break;
        case ValueOneofCase.ClosingError:
          ClosingError = other.ClosingError;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "callback_idx" field.</summary>
    public const int CallbackIdxFieldNumber = 1;
    private uint callbackIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CallbackIdx {
      get { return callbackIdx_; }
      set {
        callbackIdx_ = value;
      }
    }

    /// <summary>Field number for the "resp_pointer" field.</summary>
    public const int RespPointerFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RespPointer {
      get { return valueCase_ == ValueOneofCase.RespPointer ? (ulong) value_ : 0UL; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.RespPointer;
      }
    }

    /// <summary>Field number for the "constant_response" field.</summary>
    public const int ConstantResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Response.ConstantResponse ConstantResponse {
      get { return valueCase_ == ValueOneofCase.ConstantResponse ? (global::Response.ConstantResponse) value_ : global::Response.ConstantResponse.Ok; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.ConstantResponse;
      }
    }

    /// <summary>Field number for the "request_error" field.</summary>
    public const int RequestErrorFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestError {
      get { return valueCase_ == ValueOneofCase.RequestError ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.RequestError;
      }
    }

    /// <summary>Field number for the "closing_error" field.</summary>
    public const int ClosingErrorFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClosingError {
      get { return valueCase_ == ValueOneofCase.ClosingError ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.ClosingError;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      RespPointer = 2,
      ConstantResponse = 3,
      RequestError = 4,
      ClosingError = 5,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallbackIdx != other.CallbackIdx) return false;
      if (RespPointer != other.RespPointer) return false;
      if (ConstantResponse != other.ConstantResponse) return false;
      if (RequestError != other.RequestError) return false;
      if (ClosingError != other.ClosingError) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CallbackIdx != 0) hash ^= CallbackIdx.GetHashCode();
      if (valueCase_ == ValueOneofCase.RespPointer) hash ^= RespPointer.GetHashCode();
      if (valueCase_ == ValueOneofCase.ConstantResponse) hash ^= ConstantResponse.GetHashCode();
      if (valueCase_ == ValueOneofCase.RequestError) hash ^= RequestError.GetHashCode();
      if (valueCase_ == ValueOneofCase.ClosingError) hash ^= ClosingError.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CallbackIdx != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CallbackIdx);
      }
      if (valueCase_ == ValueOneofCase.RespPointer) {
        output.WriteRawTag(16);
        output.WriteUInt64(RespPointer);
      }
      if (valueCase_ == ValueOneofCase.ConstantResponse) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ConstantResponse);
      }
      if (valueCase_ == ValueOneofCase.RequestError) {
        output.WriteRawTag(34);
        output.WriteString(RequestError);
      }
      if (valueCase_ == ValueOneofCase.ClosingError) {
        output.WriteRawTag(42);
        output.WriteString(ClosingError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CallbackIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CallbackIdx);
      }
      if (valueCase_ == ValueOneofCase.RespPointer) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RespPointer);
      }
      if (valueCase_ == ValueOneofCase.ConstantResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConstantResponse);
      }
      if (valueCase_ == ValueOneofCase.RequestError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestError);
      }
      if (valueCase_ == ValueOneofCase.ClosingError) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClosingError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.CallbackIdx != 0) {
        CallbackIdx = other.CallbackIdx;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.RespPointer:
          RespPointer = other.RespPointer;
          break;
        case ValueOneofCase.ConstantResponse:
          ConstantResponse = other.ConstantResponse;
          break;
        case ValueOneofCase.RequestError:
          RequestError = other.RequestError;
          break;
        case ValueOneofCase.ClosingError:
          ClosingError = other.ClosingError;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CallbackIdx = input.ReadUInt32();
            break;
          }
          case 16: {
            RespPointer = input.ReadUInt64();
            break;
          }
          case 24: {
            value_ = input.ReadEnum();
            valueCase_ = ValueOneofCase.ConstantResponse;
            break;
          }
          case 34: {
            RequestError = input.ReadString();
            break;
          }
          case 42: {
            ClosingError = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
