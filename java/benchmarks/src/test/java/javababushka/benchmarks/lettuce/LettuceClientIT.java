/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package javababushka.benchmarks.lettuce;

import javababushka.benchmarks.clients.lettuce.LettuceClient;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

public class LettuceClientIT {

  private static LettuceClient lettuceClient;

  @BeforeAll
  static void initializeLettuceClient() {
    lettuceClient = new LettuceClient();
    lettuceClient.connectToRedis();
  }

  @AfterAll
  static void closeConnection() {
    lettuceClient.closeConnection();
  }

  @Test
  public void testResourceSetGet() {
    int iterations = 100000;
    String value = "my-value";
    /*
        HashMap<ChosenAction, Benchmarking.Operation> actions = new HashMap<>();
        actions.put(ChosenAction.GET_EXISTING, () -> lettuceClient.get(Benchmarking.generateKeySet()));
        actions.put(
            ChosenAction.GET_NON_EXISTING, () -> lettuceClient.get(Benchmarking.generateKeyGet()));
        actions.put(ChosenAction.SET, () -> lettuceClient.set(Benchmarking.generateKeySet(), value));

        Map<ChosenAction, List<Long>> latencies =
            Map.of(
                ChosenAction.GET_EXISTING, new ArrayList<>(),
                ChosenAction.GET_NON_EXISTING, new ArrayList<>(),
                ChosenAction.SET, new ArrayList<>());
        for (int i = 0; i < iterations; i++) {
          var latency = Benchmarking.measurePerformance(actions);
          latencies.get(latency.getKey()).add(latency.getValue());
        }

        Benchmarking.printResults(Benchmarking.calculateResults(latencies), 0, iterations);
    */
  }
}
