// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PATH/redis_request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RedisRequest {

  /// <summary>Holder for reflection information generated from PATH/redis_request.proto</summary>
  internal static partial class RedisRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for PATH/redis_request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RedisRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQQVRIL3JlZGlzX3JlcXVlc3QucHJvdG8SDXJlZGlzX3JlcXVlc3Qi0gEK",
            "DFJlZGlzUmVxdWVzdBIUCgxjYWxsYmFja19pZHgYASABKA0SMAoMcmVxdWVz",
            "dF90eXBlGAIgASgOMhoucmVkaXNfcmVxdWVzdC5SZXF1ZXN0VHlwZRI7Cgph",
            "cmdzX2FycmF5GAMgASgLMiUucmVkaXNfcmVxdWVzdC5SZWRpc1JlcXVlc3Qu",
            "QXJnc0FycmF5SAASGgoQYXJnc192ZWNfcG9pbnRlchgEIAEoBEgAGhkKCUFy",
            "Z3NBcnJheRIMCgRhcmdzGAEgAygJQgYKBGFyZ3MqWgoLUmVxdWVzdFR5cGUS",
            "EgoOSW52YWxpZFJlcXVlc3QQABINCglHZXRTdHJpbmcQARINCglTZXRTdHJp",
            "bmcQAhIICgRJbmNyEAMSDwoLTUdldFN0cmluZ3MQBGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RedisRequest.RequestType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RedisRequest.RedisRequest), global::RedisRequest.RedisRequest.Parser, new[]{ "CallbackIdx", "RequestType", "ArgsArray", "ArgsVecPointer" }, new[]{ "Args" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::RedisRequest.RedisRequest.Types.ArgsArray), global::RedisRequest.RedisRequest.Types.ArgsArray.Parser, new[]{ "Args" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  internal enum RequestType {
    /// <summary>
    //// Invalid request type
    /// </summary>
    [pbr::OriginalName("InvalidRequest")] InvalidRequest = 0,
    /// <summary>
    //// Type of a get string request.
    /// </summary>
    [pbr::OriginalName("GetString")] GetString = 1,
    /// <summary>
    //// Type of a set string request.
    /// </summary>
    [pbr::OriginalName("SetString")] SetString = 2,
    [pbr::OriginalName("Incr")] Incr = 3,
    [pbr::OriginalName("MGetStrings")] MgetStrings = 4,
  }

  #endregion

  #region Messages
  internal sealed partial class RedisRequest : pb::IMessage<RedisRequest> {
    private static readonly pb::MessageParser<RedisRequest> _parser = new pb::MessageParser<RedisRequest>(() => new RedisRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedisRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RedisRequest.RedisRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedisRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedisRequest(RedisRequest other) : this() {
      callbackIdx_ = other.callbackIdx_;
      requestType_ = other.requestType_;
      switch (other.ArgsCase) {
        case ArgsOneofCase.ArgsArray:
          ArgsArray = other.ArgsArray.Clone();
          break;
        case ArgsOneofCase.ArgsVecPointer:
          ArgsVecPointer = other.ArgsVecPointer;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedisRequest Clone() {
      return new RedisRequest(this);
    }

    /// <summary>Field number for the "callback_idx" field.</summary>
    public const int CallbackIdxFieldNumber = 1;
    private uint callbackIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CallbackIdx {
      get { return callbackIdx_; }
      set {
        callbackIdx_ = value;
      }
    }

    /// <summary>Field number for the "request_type" field.</summary>
    public const int RequestTypeFieldNumber = 2;
    private global::RedisRequest.RequestType requestType_ = global::RedisRequest.RequestType.InvalidRequest;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RedisRequest.RequestType RequestType {
      get { return requestType_; }
      set {
        requestType_ = value;
      }
    }

    /// <summary>Field number for the "args_array" field.</summary>
    public const int ArgsArrayFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RedisRequest.RedisRequest.Types.ArgsArray ArgsArray {
      get { return argsCase_ == ArgsOneofCase.ArgsArray ? (global::RedisRequest.RedisRequest.Types.ArgsArray) args_ : null; }
      set {
        args_ = value;
        argsCase_ = value == null ? ArgsOneofCase.None : ArgsOneofCase.ArgsArray;
      }
    }

    /// <summary>Field number for the "args_vec_pointer" field.</summary>
    public const int ArgsVecPointerFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ArgsVecPointer {
      get { return argsCase_ == ArgsOneofCase.ArgsVecPointer ? (ulong) args_ : 0UL; }
      set {
        args_ = value;
        argsCase_ = ArgsOneofCase.ArgsVecPointer;
      }
    }

    private object args_;
    /// <summary>Enum of possible cases for the "args" oneof.</summary>
    public enum ArgsOneofCase {
      None = 0,
      ArgsArray = 3,
      ArgsVecPointer = 4,
    }
    private ArgsOneofCase argsCase_ = ArgsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArgsOneofCase ArgsCase {
      get { return argsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearArgs() {
      argsCase_ = ArgsOneofCase.None;
      args_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedisRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedisRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CallbackIdx != other.CallbackIdx) return false;
      if (RequestType != other.RequestType) return false;
      if (!object.Equals(ArgsArray, other.ArgsArray)) return false;
      if (ArgsVecPointer != other.ArgsVecPointer) return false;
      if (ArgsCase != other.ArgsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CallbackIdx != 0) hash ^= CallbackIdx.GetHashCode();
      if (RequestType != global::RedisRequest.RequestType.InvalidRequest) hash ^= RequestType.GetHashCode();
      if (argsCase_ == ArgsOneofCase.ArgsArray) hash ^= ArgsArray.GetHashCode();
      if (argsCase_ == ArgsOneofCase.ArgsVecPointer) hash ^= ArgsVecPointer.GetHashCode();
      hash ^= (int) argsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CallbackIdx != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CallbackIdx);
      }
      if (RequestType != global::RedisRequest.RequestType.InvalidRequest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RequestType);
      }
      if (argsCase_ == ArgsOneofCase.ArgsArray) {
        output.WriteRawTag(26);
        output.WriteMessage(ArgsArray);
      }
      if (argsCase_ == ArgsOneofCase.ArgsVecPointer) {
        output.WriteRawTag(32);
        output.WriteUInt64(ArgsVecPointer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CallbackIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CallbackIdx);
      }
      if (RequestType != global::RedisRequest.RequestType.InvalidRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestType);
      }
      if (argsCase_ == ArgsOneofCase.ArgsArray) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArgsArray);
      }
      if (argsCase_ == ArgsOneofCase.ArgsVecPointer) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ArgsVecPointer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedisRequest other) {
      if (other == null) {
        return;
      }
      if (other.CallbackIdx != 0) {
        CallbackIdx = other.CallbackIdx;
      }
      if (other.RequestType != global::RedisRequest.RequestType.InvalidRequest) {
        RequestType = other.RequestType;
      }
      switch (other.ArgsCase) {
        case ArgsOneofCase.ArgsArray:
          if (ArgsArray == null) {
            ArgsArray = new global::RedisRequest.RedisRequest.Types.ArgsArray();
          }
          ArgsArray.MergeFrom(other.ArgsArray);
          break;
        case ArgsOneofCase.ArgsVecPointer:
          ArgsVecPointer = other.ArgsVecPointer;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CallbackIdx = input.ReadUInt32();
            break;
          }
          case 16: {
            RequestType = (global::RedisRequest.RequestType) input.ReadEnum();
            break;
          }
          case 26: {
            global::RedisRequest.RedisRequest.Types.ArgsArray subBuilder = new global::RedisRequest.RedisRequest.Types.ArgsArray();
            if (argsCase_ == ArgsOneofCase.ArgsArray) {
              subBuilder.MergeFrom(ArgsArray);
            }
            input.ReadMessage(subBuilder);
            ArgsArray = subBuilder;
            break;
          }
          case 32: {
            ArgsVecPointer = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RedisRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal sealed partial class ArgsArray : pb::IMessage<ArgsArray> {
        private static readonly pb::MessageParser<ArgsArray> _parser = new pb::MessageParser<ArgsArray>(() => new ArgsArray());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ArgsArray> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::RedisRequest.RedisRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ArgsArray() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ArgsArray(ArgsArray other) : this() {
          args_ = other.args_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ArgsArray Clone() {
          return new ArgsArray(this);
        }

        /// <summary>Field number for the "args" field.</summary>
        public const int ArgsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_args_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Args {
          get { return args_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ArgsArray);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ArgsArray other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!args_.Equals(other.args_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= args_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          args_.WriteTo(output, _repeated_args_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += args_.CalculateSize(_repeated_args_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ArgsArray other) {
          if (other == null) {
            return;
          }
          args_.Add(other.args_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                args_.AddEntriesFrom(input, _repeated_args_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
