name: Java CI

on:
    push:
        branches: ["main"]
        paths:
            - glide-core/src/**
            - submodules/**
            - java/**
            - .github/workflows/java.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    pull_request:
        paths:
            - glide-core/src/**
            - submodules/**
            - java/**
            - .github/workflows/java.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    workflow_dispatch:

    pull_request_target:
        types: [labeled]
        paths:
            - glide-core/src/**
            - submodules/**
            - java/**
            - .github/workflows/java.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    schedule:
        - cron: "0 0 * * *"

concurrency:
    group: java-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    check-label:
      runs-on: ubuntu-latest
      # If the trigger is a label we want to check if it is a CoreChanges label, 
      # if it is we want to run the job in the AWS_ACTIONS environment so its need to be approved
      environment: ${{ github.event_name == 'pull_request_target'  && 'AWS_ACTIONS' || '' }}  
      steps:
        - name: Check for CoreChanges label
          if: github.event_name == 'pull_request_target' && github.event.label.name != 'CoreChanges'
          run: |
            echo "This workflow only runs for the CoreChanges label on pull requests"
            exit 1

    load-engine-matrix:
      runs-on: ubuntu-latest
      # We want to run this job only if the previous job outputs should_run=true,
      # Which means that if the trigger was a label we run this job just if the label was CoreChanges
      needs: check-label      
      outputs:
        matrix: ${{ steps.load-engine-matrix.outputs.matrix }}
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Load the engine matrix
            id: load-engine-matrix
            shell: bash
            run: |
              if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event_name }}" == "push" ]]; then
                echo "matrix=$(jq -c '[.[] | select(.run == "always")]' < .github/json_matrices/engine-matrix.json)" >> $GITHUB_OUTPUT
              else
                echo "matrix=$(jq -c . < .github/json_matrices/engine-matrix.json)" >> $GITHUB_OUTPUT
              fi

    create-host-matrix:
      runs-on: ubuntu-latest
      needs: check-label
      outputs:
          matrix: ${{ steps.create-host-matrix.outputs.matrix }}
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Create host matrix
            id: create-host-matrix
            shell: bash
            run: |
              if [[ "${{ github.event_name }}" == "pull_request" || "${{github.event_name }}" == "push" ]]; then
                echo 'matrix={"include":[{"OS":"ubuntu","RUNNER":"ubuntu-latest","TARGET":"x86_64-unknown-linux-gnu"}]}' >> $GITHUB_OUTPUT
              else
                echo 'matrix={"include":[{"OS":"ubuntu","RUNNER":"ubuntu-latest","TARGET":"x86_64-unknown-linux-gnu"},{"OS":"macos","RUNNER":"macos-latest","TARGET":"aarch64-apple-darwin"}]}' >> $GITHUB_OUTPUT
              fi

    build-and-test-java-client:
        needs: [load-engine-matrix, create-host-matrix]
        timeout-minutes: 35
        strategy:
            # Run all jobs
            fail-fast: false
            matrix:
                java:
                    - 11
                    - 17
                engine: ${{ fromJson(needs.load-engine-matrix.outputs.matrix) }}
                host: ${{ fromJson(needs.create-host-matrix.outputs.matrix).include }}

        runs-on: ${{ matrix.host.RUNNER }}

        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - uses: gradle/actions/wrapper-validation@v3

            - name: Set up JDK ${{ matrix.java }}
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: ${{ matrix.java }}

            - name: Install shared software dependencies
              uses: ./.github/workflows/install-shared-dependencies
              with:
                  os: ${{ matrix.host.OS }}
                  target: ${{ matrix.host.TARGET }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  engine-version: ${{ matrix.engine.version }}

            - name: Install protoc (protobuf)
              uses: arduino/setup-protoc@v3
              with:
                  version: "26.1"
                  repo-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Build java client
              working-directory: java
              run: ./gradlew --continue build -x javadoc

            - name: Ensure no skipped files by linter
              working-directory: java
              run: ./gradlew spotlessDiagnose | grep 'All formatters are well behaved for all files'

            - uses: ./.github/workflows/test-benchmark
              with:
                  language-flag: -java

            - name: Upload test & spotbugs reports
              if: always()
              continue-on-error: true
              uses: actions/upload-artifact@v4
              with:
                  name: test-reports-java-${{ matrix.java }}-${{ matrix.engine.type }}-${{ matrix.engine.version }}-${{ matrix.host.RUNNER }}
                  path: |
                      java/client/build/reports/**
                      java/integTest/build/reports/**
                      utils/clusters/**
                      benchmarks/results/**
                      java/client/build/reports/spotbugs/**

    build-amazonlinux-latest:
        if: github.repository_owner == 'valkey-io' && (github.event_name == 'schedule' || github.event.label.name == 'CoreChanges')
        strategy:
            # Run all jobs
            fail-fast: false
            matrix:
                java:
                    - 11
                    - 17
        runs-on: ubuntu-latest
        needs: check-label
        container: amazonlinux:latest
        timeout-minutes: 35
        steps:
            - name: Install git
              run: |
                  yum -y remove git
                  yum -y remove git-*
                  yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
                  yum update
                  yum install -y git
                  git --version

            - uses: actions/checkout@v4

            - name: Checkout submodules
              run: |
                  git config --global --add safe.directory "$GITHUB_WORKSPACE"
                  git submodule update --init --recursive

            - name: Install shared software dependencies
              uses: ./.github/workflows/install-shared-dependencies
              with:
                  os: "amazon-linux"
                  target: "x86_64-unknown-linux-gnu"
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  engine-version: "7.2.5"

            - name: Install protoc (protobuf)
              uses: arduino/setup-protoc@v3
              with:
                  version: "26.1"
                  repo-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Install Java
              run: |
                  yum install -y java-${{ matrix.java }}-amazon-corretto-devel.x86_64

            - name: Build java wrapper
              working-directory: java
              run: ./gradlew --continue build -x javadoc

            - name: Upload test & spotbugs reports
              if: always()
              continue-on-error: true
              uses: actions/upload-artifact@v4
              with:
                  name: test-reports-${{ matrix.java }}-amazon-linux
                  path: |
                      java/client/build/reports/**
                      java/integTest/build/reports/**
                      java/client/build/reports/spotbugs/**

    lint-rust:
        timeout-minutes: 15
        runs-on: ubuntu-latest
        needs: check-label
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - uses: ./.github/workflows/lint-rust
              with:
                  cargo-toml-folder: ./java
              name: lint java rust
