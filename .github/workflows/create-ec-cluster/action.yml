name: Create ElastiCache Cluster

on:
  push:
    branches:
      - main

inputs:
    aws-region:
        description: AWS Region, e.g. us-east-1
        required: true

runs:
  using: "composite"
  steps:
    - name: Check AWS_ACCESS_KEY_ID
      shell: bash
      run: echo $AWS_ACCESS_KEY_ID
        

    - name: Configure AWS CLI
      shell: bash
      run: |
        aws configure set region ${{ inputs.aws-region }}
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

    - name: Create ElastiCache Cluster
      id: create-cluster
      shell: bash
      run: |
        aws elasticache create-cache-cluster \
          --cache-cluster-id my-cluster-${CI_JOB_ID} \
          --engine redis \
          --cache-node-type cache.t2.micro \
          --num-cache-nodes 1 \
          --security-group-ids sg-12345678 \
          --subnet-group-name my-subnet-group

    - name: Wait for Cluster to be Available
      id: wait-for-cluster
      shell: bash
      run: |
        status="creating"
        while [ "$status" != "available" ]; do
          sleep 30  # Adjust the interval based on your needs
          status=$(aws elasticache describe-cache-clusters --cache-cluster-id my-cluster-${CI_JOB_ID} --query 'CacheClusters[0].CacheClusterStatus' --output text)
        done

    - name: Use the Cluster
      shell: bash
      run: |
        # Once the cluster is available, you can perform further actions, such as testing or deploying your application.
        echo "ElastiCache cluster my-cluster-${CI_JOB_ID} is now available."
